name: Build Next.js

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]
  workflow_dispatch:

env:
  NODE_VERSION: 22.x
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm ci

      - name: Cache node_modules
        uses: actions/cache/save@v4
        with:
          path: node_modules/
          key: ${{ runner.os }}-node_modules-${{ github.run_id }}

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        Test: [Test, Lint]

    needs: install

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm ci

      - if: ${{ matrix.Test == 'Lint' }}
        run: npm run lint

      - if: ${{ matrix.Test == 'Test' }}
        run: npm run test

  build:
    runs-on: ubuntu-latest

    needs: test
    if: github.event_name != 'pull_request'

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - name: Cache .next output
        uses: actions/cache/save@v4
        with:
          path: .next/
          key: ${{ runner.os }}-next-${{ github.run_id }}

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'

    steps:
      - uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: 'v2.1.1'

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Use cached .next output
        uses: actions/cache/restore@v4
        with:
          path: .next/
          key: ${{ runner.os }}-next-${{ github.run_id }}

      - name: Use cached node_modules
        uses: actions/cache/restore@v4
        with:
          path: node_modules/
          key: ${{ runner.os }}-node_modules-${{ github.run_id }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
